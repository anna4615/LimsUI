@page

@using System.Globalization

@model LimsUI.Pages.ElisaPages.ReviewResultModel
@{
    NumberFormatInfo PointDecimalSeparator = new NumberFormatInfo { NumberDecimalSeparator = "." };
}



@*<div>
    <form method="post" enctype="multipart/form-data">
        <div>
            <input type="file" name="SelectedFile" />
        </div>
        <div class="py-3">
            <button type="submit" class="btn btn-primary">OK</button>
        </div>
    </form>
</div>*@

@if (Model.Elisa != null)
{
    <div id="standardCurve" style="height: 350px; width: 800px"></div>


    <div class="pt-5">
        <form class="form-group" method="post">
            <table class="table table-sm border-bottom">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Elisa.Tests[0].sampleId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Elisa.Tests[0].sampleName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Elisa.Tests[0].measureValue)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Elisa.Tests[0].concentration)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Elisa.Tests.Count; i++)
                    {
                        <input asp-for="@Model.ReviewedResult.Tests[i].elisaId" value="@Model.Elisa.Tests[i].elisaId" hidden>
                        <input asp-for="@Model.ReviewedResult.Tests[i].id" value="@Model.Elisa.Tests[i].id" hidden>
                        <tr class="border-bottom">
                            <td>
                                <input class="without-border" asp-for="@Model.ReviewedResult.Tests[i].sampleId"
                               value="@Model.Elisa.Tests[i].sampleId" readonly>
                            </td>
                            <td>
                                <input class="without-border" asp-for="@Model.ReviewedResult.Tests[i].sampleName"
                               value="@Model.Elisa.Tests[i].sampleName" readonly>
                            </td>
                            <td>
                                <input class="without-border" asp-for="@Model.ReviewedResult.Tests[i].measureValue"
                               value="@Model.Elisa.Tests[i].measureValue" readonly>
                            </td>
                            <td>
                                <input class="without-border" asp-for="@Model.ReviewedResult.Tests[i].concentration"
                               value="@Math.Round(Model.Elisa.Tests[i].concentration, 1)" readonly>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="d-flex justify-content-center pt-3">
                <input asp-for="ReviewedResult.Id" value="@Model.Elisa.Id" hidden>
                <input asp-for="ResultReviewed" checked hidden>
                <div>
                    <label asp-for="ReviewedResult.Approved"></label>
                    <input asp-for="ReviewedResult.Approved">
                </div>
                <div class="pl-3">
                    <label asp-for="ReviewedResult.Redo"></label>
                    <input asp-for="ReviewedResult.Redo">
                </div>
            </div>
            <div class="d-flex justify-content-center">
                <input type="submit" value="OK" class="btn btn-primary" />
            </div>
        </form>
    </div>


    <script src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        google.charts.load('current', { packages: ['corechart'], 'language': 'sv'});
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                    ['Koncentration','Mätvärde'],
        @foreach (var data in Model.StandardDatas)
        {
            //Gör om decimaltal till string och specar decimaltecken till punkt, om
            //man skickar double som den är gör Chrome om decimaltecknet till ett komma vilket
            //inte Google charts förstår.
            string conc = data.Concentration.ToString(PointDecimalSeparator);
            string measureValue = data.MeasureValue.ToString(PointDecimalSeparator);
            <text>[@conc, @measureValue],</text>
        }
            ]);

            var options = {
                title: 'Standardkurva',
                chartArea: { width: '50%' },
                trendlines: {
                    0: {
                        type: 'linear',
                        showR2: true,
                        visibleInLegend: true
                    }
                },
                hAxis: { title: 'Koncentration (ug/ml)' },
                vAxis: { title: 'Mätvärde (A405)' }
            };

            var chartLinear = new google.visualization.ScatterChart(document.getElementById('standardCurve'));
            chartLinear.draw(data, options);
        }
    </script>
}